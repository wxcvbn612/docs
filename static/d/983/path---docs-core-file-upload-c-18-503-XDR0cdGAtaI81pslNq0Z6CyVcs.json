{"pageContext":{"html":"<h1 id=\"handling-file-upload\"><a href=\"#handling-file-upload\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handling File Upload</h1>\n<p>As common a problem as it may seem, handling file upload requires a custom\nimplementation in your app. This page will guide you in handling file upload in\nyour API, with the help of\n<a href=\"https://github.com/dustin10/VichUploaderBundle\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VichUploaderBundle</a>. It is\nrecommended you <a href=\"https://github.com/dustin10/VichUploaderBundle/blob/master/Resources/doc/index.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">read the documentation of\nVichUploaderBundle</a>\nbefore proceeding. It will help you get a grasp on how the bundle works, and why we use it.</p>\n<h2 id=\"installing-vichuploaderbundle\"><a href=\"#installing-vichuploaderbundle\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing VichUploaderBundle</h2>\n<p>Install the bundle with the help of composer:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker-compose <span class=\"token function\">exec</span> php composer require vich/uploader-bundle</code></pre></div>\n<p>This will create a new configuration file that you will need to slightly change\nto make it look like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># config/packages/vich_uploader.yaml</span>\n<span class=\"token key atrule\">vich_uploader</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">db_driver</span><span class=\"token punctuation\">:</span> orm\n\n    <span class=\"token key atrule\">mappings</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">media_object</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">uri_prefix</span><span class=\"token punctuation\">:</span> /media\n            <span class=\"token key atrule\">upload_destination</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'%kernel.project_dir%/public/media'</span></code></pre></div>\n<h2 id=\"configuring-the-entity-receiving-the-uploaded-file\"><a href=\"#configuring-the-entity-receiving-the-uploaded-file\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring the Entity Receiving the Uploaded File</h2>\n<p>In our example, we will create a <code class=\"language-text\">MediaObject</code> API resource. We will post files\nto this resource endpoint, and then link the newly created resource to another\nresource (in our case: Book).</p>\n<p>The <code class=\"language-text\">MediaObject</code> resource is implemented like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/MediaObject.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>CreateMediaObjectAction</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Vich<span class=\"token punctuation\">\\</span>UploaderBundle<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Annotation</span> <span class=\"token keyword\">as</span> Vich<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ORM\\Entity\n * @ApiResource(iri=\"http://schema.org/MediaObject\", collectionOperations={\n *     \"get\",\n *     \"post\"={\n *         \"method\"=\"POST\",\n *         \"path\"=\"/media_objects\",\n *         \"controller\"=CreateMediaObjectAction::class,\n *         \"defaults\"={\"_api_receive\"=false},\n *     },\n * })\n * @Vich\\Uploadable\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MediaObject</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">/**\n     * @var File|null\n     * @Assert\\NotNull()\n     * @Vich\\UploadableField(mapping=\"media_object\", fileNameProperty=\"contentUrl\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @var string|null\n     * @ORM\\Column(nullable=true)\n     * @ApiProperty(iri=\"http://schema.org/contentUrl\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$contentUrl</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"handling-file-upload-1\"><a href=\"#handling-file-upload-1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Handling File Upload</h2>\n<p>At this point, the entity is configured, but we still need to write the action\nthat handles the file upload.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Controller/CreateMediaObjectAction.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Symfony<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>ValidationException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>MediaObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Form<span class=\"token punctuation\">\\</span>MediaObjectType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Sensio<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>FrameworkExtraBundle<span class=\"token punctuation\">\\</span>Configuration<span class=\"token punctuation\">\\</span>IsGranted</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Doctrine<span class=\"token punctuation\">\\</span>RegistryInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Form<span class=\"token punctuation\">\\</span>FormFactoryInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>ValidatorInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreateMediaObjectAction</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$validator</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$doctrine</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$factory</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>RegistryInterface <span class=\"token variable\">$doctrine</span><span class=\"token punctuation\">,</span> FormFactoryInterface <span class=\"token variable\">$factory</span><span class=\"token punctuation\">,</span> ValidatorInterface <span class=\"token variable\">$validator</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">validator</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$validator</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">doctrine</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$doctrine</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">factory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$factory</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * @IsGranted(\"ROLE_USER\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span>Request <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> MediaObject\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$mediaObject</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MediaObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$form</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">factory</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>MediaObjectType<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$mediaObject</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$form</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">handleRequest</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$form</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isSubmitted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$form</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$em</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">doctrine</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$em</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mediaObject</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$em</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Prevent the serialization of the file property</span>\n            <span class=\"token variable\">$mediaObject</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">return</span> <span class=\"token variable\">$mediaObject</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// This will be handled by API Platform and returns a validation error.</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationException</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">validator</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mediaObject</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>As you can see, the action uses a form. You will need this form to be like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Form/MediaObjectType.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Form</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>MediaObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Form<span class=\"token punctuation\">\\</span>AbstractType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Form<span class=\"token punctuation\">\\</span>Extension<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Type<span class=\"token punctuation\">\\</span>FileType</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Form<span class=\"token punctuation\">\\</span>FormBuilderInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>OptionsResolver<span class=\"token punctuation\">\\</span>OptionsResolver</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MediaObjectType</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractType</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">buildForm</span><span class=\"token punctuation\">(</span>FormBuilderInterface <span class=\"token variable\">$builder</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$options</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$builder</span>\n            <span class=\"token comment\">// Configure each fields you want to be submitted here, like a classic form.</span>\n            <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'file'</span><span class=\"token punctuation\">,</span> FileType<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token single-quoted-string string\">'label'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'label.file'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token single-quoted-string string\">'required'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">configureOptions</span><span class=\"token punctuation\">(</span>OptionsResolver <span class=\"token variable\">$resolver</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$resolver</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token single-quoted-string string\">'data_class'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> MediaObject<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token single-quoted-string string\">'csrf_protection'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getBlockPrefix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token single-quoted-string string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"making-a-request-to-the-media_objects-endpoint\"><a href=\"#making-a-request-to-the-media_objects-endpoint\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Making a Request to the <code class=\"language-text\">/media_objects</code> Endpoint</h2>\n<p>Your <code class=\"language-text\">/media_objects</code> endpoint is now ready to receive a <code class=\"language-text\">POST</code> request with a\nfile. This endpoint accepts standard <code class=\"language-text\">multipart/form-data</code> encoded data, but\nnot JSON data. You will need to format your request accordingly. After posting\nyour data, you will get a response looking like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"@type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"http://schema.org/ImageObject\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"@id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/media_objects/&lt;id>\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"contentUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;filename>\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"linking-a-mediaobject-resource-to-another-resource\"><a href=\"#linking-a-mediaobject-resource-to-another-resource\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Linking a MediaObject Resource to Another Resource</h2>\n<p>We now need to update our <code class=\"language-text\">Book</code> resource, so that we can link a <code class=\"language-text\">MediaObject</code>\nto serve as the book cover.</p>\n<p>We first need to edit our Book resource, and add a new property called <code class=\"language-text\">image</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Book.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiProperty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>File<span class=\"token punctuation\">\\</span>File</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Vich<span class=\"token punctuation\">\\</span>UploaderBundle<span class=\"token punctuation\">\\</span>Mapping<span class=\"token punctuation\">\\</span>Annotation</span> <span class=\"token keyword\">as</span> Vich<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ORM\\Entity\n * @ApiResource(iri=\"http://schema.org/Book\")\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n\n    <span class=\"token comment\">/**\n     * @var MediaObject|null\n     * @ORM\\ManyToOne(targetEntity=\"App\\Entity\\MediaObject\")\n     * @ORM\\JoinColumn(nullable=true)\n     * @ApiProperty(iri=\"http://schema.org/image\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$image</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>By sending a POST request to create a new book, linked with the previously\nuploaded cover, you can have a nice illustrated book record!</p>\n<p><code class=\"language-text\">POST /books</code></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"The name\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/media_objects/&lt;id>\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Voilà! You can now send files to your API, and link them to any other resources\nin your app.</p>","editPath":"core/file-upload.md","title":"Handling File Upload","previous":{"slug":"/docs/core/push-relations/","title":"Pushing Related Resources Using HTTP/2"},"next":{"slug":"/docs/core/default-order/","title":"Overriding Default Order"}}}
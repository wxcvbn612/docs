{"pageContext":{"html":"<h1 id=\"security\"><a href=\"#security\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Security</h1>\n<p>To completely disable some operations from your application, refer to the <a href=\"/docs/core/operations/#enabling-and-disabling-operations\">disabling operations</a>\nsection.</p>\n<p>Using API Platform, you can leverage all security features provided by the <a href=\"http://symfony.com/doc/current/book/security.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Symfony Security component</a>.\nFor instance, if you wish to restrict the access of some endpoints, you can use <a href=\"http://symfony.com/doc/current/book/security.html#securing-url-patterns-access-control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">access controls directives</a>.</p>\n<p>Since 2.1, you can add security through <a href=\"https://symfony.com/doc/current/expressions.html#security-complex-access-controls-with-expressions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Symfony's access control expressions</a> in your entities.</p>\n<p>Here is an example:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Book.php</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>Mapping</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">ORM</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Secured resource.\n *\n * @ApiResource(\n *     attributes={\"access_control\"=\"is_granted('ROLE_USER')\"},\n *     collectionOperations={\n *         \"get\",\n *         \"post\"={\"access_control\"=\"is_granted('ROLE_ADMIN')\"}\n *     },\n *     itemOperations={\n *         \"get\"={\"access_control\"=\"is_granted('ROLE_USER') and object.owner == user\"}\n *     }\n * )\n * @ORM\\Entity\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @var int\n     *\n     * @ORM\\Column(type=\"integer\")\n     * @ORM\\Id\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @var string The title\n     *\n     * @ORM\\Column\n     * @Assert\\NotBlank\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$title</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @var User The owner\n     *\n     * @ORM\\ManyToOne(targetEntity=User::class)\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$owner</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>This example is going to allow only fetching the book related to the current user. If he tries to fetch a book which is not\nlinked to his account, that will not return the resource. In addition, only admins are able to create books which means\nthat a user could not create a book.</p>\n<p>It is also possible to use the <a href=\"/docs/core/events/\">event system</a> for more advanced logic or even <a href=\"/docs/core/operations/#creating-custom-operations-and-controllers\">custom actions</a>\nif you really need to.</p>\n<h2 id=\"configuring-the-access-control-message\"><a href=\"#configuring-the-access-control-message\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring the Access Control Message</h2>\n<p>By default when API request will be denied you will get the \"Access Denied.\" message.\nYou can change it by configuring \"access_control_message\" attribute.</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Book.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * ...\n * @ApiResource(\n *     attributes={\"access_control\"=\"is_granted('ROLE_USER')\"},\n *     collectionOperations={\n *         \"post\"={\"access_control\"=\"is_granted('ROLE_ADMIN')\", \"access_control_message\"=\"Only admins can add books.\"}\n *     },\n *     itemOperations={\n *         \"get\"={\"access_control\"=\"is_granted('ROLE_USER') and object.owner == user\", \"access_control_message\"=\"Sorry, but you are not the book owner.\"}\n *     }\n * )\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Alternatively, using YAML:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/api_platform/resources.yaml</span>\n<span class=\"token key atrule\">App\\Entity\\Book</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">attributes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">access_control</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'is_granted(\"ROLE_USER\")'</span>\n    <span class=\"token key atrule\">collectionOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'POST'</span>\n            <span class=\"token key atrule\">access_control</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'is_granted(\"ROLE_ADMIN\")'</span>\n            <span class=\"token key atrule\">access_control_message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Only admins can add books.'</span>\n    <span class=\"token key atrule\">itemOperations</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">get</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span>\n            <span class=\"token key atrule\">access_control</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'is_granted(\"ROLE_USER\") and object.owner == user'</span>\n            <span class=\"token key atrule\">access_control_message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Sorry, but you are not the book owner.'</span>\n    <span class=\"token comment\"># ...</span></code></pre></div>\n<p>In access control expressions for collection, the <code class=\"language-text\">object</code> variable contains the list of resources that will be serialized.\nTo remove entries from a collection, you should implement <a href=\"/docs/core/extensions/\">a Doctrine extension</a> to customize the generated DQL query (e.g. add <code class=\"language-text\">WHERE</code> clauses depending of the currently connected user) instead of using access control expressions.</p>\n<p>If you use <a href=\"/docs/core/data-providers/\">custom data providers</a>, you'll have to implement the filtering logic accordingly to the persistence layer you rely on.</p>","editPath":"core/security.md","title":"Security","previous":{"slug":"/docs/core/validation/","title":"Validation"},"next":{"slug":"/docs/core/data-providers/","title":"Data Providers"}}}
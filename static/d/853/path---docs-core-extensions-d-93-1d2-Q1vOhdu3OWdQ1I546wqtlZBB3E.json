{"pageContext":{"html":"<h1 id=\"extensions\"><a href=\"#extensions\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extensions</h1>\n<p>API Platform Core provides a system to extend queries on items and collections.</p>\n<p>Extensions are specific to Doctrine and Elasticsearch-PHP, and therefore, the Doctrine ORM / MongoDB ODM support or the Elasticsearch\nreading support must be enabled to use this feature. If you use custom providers it's up to you to implement your own\nextension system or not.</p>\n<h2 id=\"custom-doctrine-orm-extension\"><a href=\"#custom-doctrine-orm-extension\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Doctrine ORM Extension</h2>\n<p>Custom extensions must implement the <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryCollectionExtensionInterface</code> and / or the <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryItemExtensionInterface</code> interfaces, to be run when querying for a collection of items and when querying for an item respectively.</p>\n<p>If you use <a href=\"/docs/core/data-providers/\">custom data providers</a>, they must support extensions and be aware of active extensions to work properly.</p>\n<h3 id=\"example\"><a href=\"#example\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h3>\n<p>In the following example, we will see how to always get the offers owned by the current user. We will set up an exception, whenever the user has the <code class=\"language-text\">ROLE_ADMIN</code>.</p>\n<p>Given these two entities:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/User.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Entity/Offer.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Offer</span>\n<span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">/**\n     * @var User\n     * @ORM\\ManyToOne(targetEntity=\"User\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/Doctrine/CurrentUserExtension.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Doctrine</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Doctrine<span class=\"token punctuation\">\\</span>Orm<span class=\"token punctuation\">\\</span>Extension<span class=\"token punctuation\">\\</span>QueryCollectionExtensionInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Doctrine<span class=\"token punctuation\">\\</span>Orm<span class=\"token punctuation\">\\</span>Extension<span class=\"token punctuation\">\\</span>QueryItemExtensionInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Bridge<span class=\"token punctuation\">\\</span>Doctrine<span class=\"token punctuation\">\\</span>Orm<span class=\"token punctuation\">\\</span>Util<span class=\"token punctuation\">\\</span>QueryNameGeneratorInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>Offer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>User</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Doctrine<span class=\"token punctuation\">\\</span>ORM<span class=\"token punctuation\">\\</span>QueryBuilder</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Security<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Authentication<span class=\"token punctuation\">\\</span>Token<span class=\"token punctuation\">\\</span>Storage<span class=\"token punctuation\">\\</span>TokenStorageInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Security<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Authorization<span class=\"token punctuation\">\\</span>AuthorizationCheckerInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CurrentUserExtension</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">QueryCollectionExtensionInterface</span><span class=\"token punctuation\">,</span> QueryItemExtensionInterface\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$tokenStorage</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$authorizationChecker</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>TokenStorageInterface <span class=\"token variable\">$tokenStorage</span><span class=\"token punctuation\">,</span> AuthorizationCheckerInterface <span class=\"token variable\">$checker</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">tokenStorage</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$tokenStorage</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">authorizationChecker</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$checker</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * {@inheritdoc}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">applyToCollection</span><span class=\"token punctuation\">(</span>QueryBuilder <span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> QueryNameGeneratorInterface <span class=\"token variable\">$queryNameGenerator</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addWhere</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * {@inheritdoc}\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">applyToItem</span><span class=\"token punctuation\">(</span>QueryBuilder <span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> QueryNameGeneratorInterface <span class=\"token variable\">$queryNameGenerator</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$identifiers</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$operationName</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span> <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addWhere</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     *\n     * @param QueryBuilder $queryBuilder\n     * @param string       $resourceClass\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">addWhere</span><span class=\"token punctuation\">(</span>QueryBuilder <span class=\"token variable\">$queryBuilder</span><span class=\"token punctuation\">,</span> string <span class=\"token variable\">$resourceClass</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">tokenStorage</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">User</span> <span class=\"token operator\">&amp;&amp;</span> Offer<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$resourceClass</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">authorizationChecker</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isGranted</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'ROLE_ADMIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$rootAlias</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$queryBuilder</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRootAliases</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$queryBuilder</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">andWhere</span><span class=\"token punctuation\">(</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'%s.user = :current_user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$rootAlias</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$queryBuilder</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setParameter</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'current_user'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Finally register the custom extension:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/services.yaml</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># ...</span>\n\n    <span class=\"token key atrule\">'App\\Doctrine\\CurrentUserExtension'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> api_platform.doctrine.orm.query_extension.collection<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">priority</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9 </span><span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> api_platform.doctrine.orm.query_extension.item <span class=\"token punctuation\">}</span></code></pre></div>\n<p>Thanks to the <code class=\"language-text\">api_platform.doctrine.orm.query_extension.collection</code> tag, API Platform will register this service as a collection extension. The <code class=\"language-text\">api_platform.doctrine.orm.query_extension.item</code> do the same thing for items.</p>\n<p>Notice the priority level for the <code class=\"language-text\">api_platform.doctrine.orm.query_extension.collection</code> tag. When an extension implements the <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryResultCollectionExtensionInterface</code> or the <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\QueryResultItemExtensionInterface</code> interface to return results by itself, any lower priority extension will not be executed. Because the pagination is enabled by default with a priority of 8, the priority of the <code class=\"language-text\">app.doctrine.orm.query_extension.current_user</code> service must be at least 9 to ensure its execution.</p>\n<h4 id=\"blocking-anonymous-users\"><a href=\"#blocking-anonymous-users\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blocking Anonymous Users</h4>\n<p>This example adds a <code class=\"language-text\">WHERE</code> clause condition only when a fully authenticated user without <code class=\"language-text\">ROLE_ADMIN</code> tries to access to a resource. It means that anonymous users will be able to access to all data. To prevent this potential security issue, the API must ensure that the current user is authenticated.</p>\n<p>To secure the access to endpoints, use the following access control rule:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># app/config/package/security.yaml</span>\n<span class=\"token key atrule\">security</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token key atrule\">access_control</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># ...</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ^/offers<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span> IS_AUTHENTICATED_FULLY <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ^/users<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span> IS_AUTHENTICATED_FULLY <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"custom-doctrine-mongodb-odm-extension\"><a href=\"#custom-doctrine-mongodb-odm-extension\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Doctrine MongoDB ODM Extension</h2>\n<p>Creating custom extensions is the same as Doctrine ORM.</p>\n<p>The interfaces are:</p>\n<ul>\n<li><code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\MongoDbOdm\\Extension\\AggregationItemExtensionInterface</code> and <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\MongoDbOdm\\Extension\\AggregationCollectionExtensionInterface</code> to add stages to the <a href=\"https://www.doctrine-project.org/projects/doctrine-mongodb-odm/en/latest/reference/aggregation-builder.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">aggregation builder</a>.</li>\n<li><code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\MongoDbOdm\\Extension\\AggregationResultItemExtensionInterface</code> and <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Doctrine\\MongoDbOdm\\Extension\\AggregationResultCollectionExtensionInterface</code> to return a result.</li>\n</ul>\n<p>The tags are <code class=\"language-text\">api_platform.doctrine.mongodb.aggregation_extension.item</code> and <code class=\"language-text\">api_platform.doctrine.mongodb.aggregation_extension.collection</code>.</p>\n<p>The custom extensions receive the <a href=\"https://www.doctrine-project.org/projects/doctrine-mongodb-odm/en/latest/reference/aggregation-builder.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">aggregation builder</a>,\nused to execute <a href=\"https://docs.mongodb.com/manual/aggregation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">complex operations on data</a>.</p>\n<h2 id=\"custom-elasticsearch-extension\"><a href=\"#custom-elasticsearch-extension\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Elasticsearch Extension</h2>\n<p>Currently only extensions querying for a collection of items through a <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">search request</a>\nare supported. So your custom extensions must implement the <code class=\"language-text\">RequestBodySearchCollectionExtensionInterface</code>. Register your\ncustom extensions as services and tag them with the <code class=\"language-text\">api_platform.elasticsearch.request_body_search_extension.collection</code> tag.</p>","editPath":"core/extensions.md","title":"Extensions","previous":{"slug":"/docs/core/performance/","title":"Performance and Cache"},"next":{"slug":"/docs/core/swagger/","title":"OpenAPI Specification Support (formerly Swagger)"}}}
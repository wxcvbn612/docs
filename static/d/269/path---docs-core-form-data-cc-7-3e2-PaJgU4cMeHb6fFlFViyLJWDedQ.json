{"pageContext":{"html":"<h1 id=\"accept-applicationx-www-form-urlencoded-form-data\"><a href=\"#accept-applicationx-www-form-urlencoded-form-data\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accept <code class=\"language-text\">application/x-www-form-urlencoded</code> Form Data</h1>\n<p>API Platform only supports raw documents as request input (encoded in JSON, XML, YAML...). This has many advantages including support of types and the ability to send back to the API documents originally retrieved through a <code class=\"language-text\">GET</code> request.\nHowever, sometimes - for instance, to support legacy clients - it is necessary to accept inputs encoded in the traditional <a href=\"https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">application/x-www-form-urlencoded</code></a> format (HTML form content type). This can easily be done using <a href=\"/docs/core/events/\">the powerful event system</a> of the framework.</p>\n<p><strong>âš  Adding support for <code class=\"language-text\">application/x-www-form-urlencoded</code> makes your API vulnerable to <a href=\"https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSRF attacks</a>. Be sure to enable proper countermeasures <a href=\"https://github.com/dunglas/DunglasAngularCsrfBundle\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">such as DunglasAngularCsrfBundle</a>.</strong></p>\n<p>In this tutorial, we will decorate the default <code class=\"language-text\">DeserializeListener</code> class to handle form data if applicable, and delegate to the built-in listener for other cases.</p>\n<h2 id=\"create-your-deserializelistener-decorator\"><a href=\"#create-your-deserializelistener-decorator\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create your <code class=\"language-text\">DeserializeListener</code> Decorator</h2>\n<p>This decorator is able to denormalize posted form data to the target object. In case of other format, it fallbacks to the original <a href=\"https://github.com/api-platform/core/blob/91dc2a4d6eeb79ea8dec26b41e800827336beb1a/src/Bridge/Symfony/Bundle/Resources/config/api.xml#L85-L91\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeserializeListener</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// api/src/EventListener/DeserializeListener.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>EventListener</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Exception<span class=\"token punctuation\">\\</span>RuntimeException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Util<span class=\"token punctuation\">\\</span>RequestAttributesExtractor</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpFoundation<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>HttpKernel<span class=\"token punctuation\">\\</span>Event<span class=\"token punctuation\">\\</span>GetResponseEvent</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>EventListener<span class=\"token punctuation\">\\</span>DeserializeListener</span> <span class=\"token keyword\">as</span> DecoratedListener<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>Normalizer<span class=\"token punctuation\">\\</span>DenormalizerInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Serializer<span class=\"token punctuation\">\\</span>SerializerContextBuilderInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DeserializeListener</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$decorated</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$denormalizer</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$serializerContextBuilder</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>DenormalizerInterface <span class=\"token variable\">$denormalizer</span><span class=\"token punctuation\">,</span> SerializerContextBuilderInterface <span class=\"token variable\">$serializerContextBuilder</span><span class=\"token punctuation\">,</span> DecoratedListener <span class=\"token variable\">$decorated</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">denormalizer</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$denormalizer</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">serializerContextBuilder</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$serializerContextBuilder</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">decorated</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$decorated</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">onKernelRequest</span><span class=\"token punctuation\">(</span>GetResponseEvent <span class=\"token variable\">$event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$request</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$event</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isMethodSafe</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isMethod</span><span class=\"token punctuation\">(</span>Request<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">METHOD_DELETE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'form'</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getContentType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">denormalizeFormRequest</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">decorated</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">onKernelRequest</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function\">denormalizeFormRequest</span><span class=\"token punctuation\">(</span>Request <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> void\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$attributes</span> <span class=\"token operator\">=</span> RequestAttributesExtractor<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">extractAttributes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$context</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">serializerContextBuilder</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">createFromRequest</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$attributes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$populated</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">attributes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!==</span> <span class=\"token variable\">$populated</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$context</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'object_to_populate'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$populated</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$object</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">denormalizer</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">denormalize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$attributes</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'resource_class'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$context</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">attributes</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<h2 id=\"creating-the-service-definition\"><a href=\"#creating-the-service-definition\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating the Service Definition</h2>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/services.yaml</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token key atrule\">'App\\EventListener\\DeserializeListener'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kernel.event_listener'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">event</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'kernel.request'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'onKernelRequest'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">priority</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2 </span><span class=\"token punctuation\">}</span>\n        <span class=\"token comment\"># Autoconfiguration must be disabled to set a custom priority</span>\n        <span class=\"token key atrule\">autoconfigure</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n        <span class=\"token key atrule\">decorates</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'api_platform.listener.request.deserialize'</span>\n        <span class=\"token key atrule\">arguments</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">$decorated</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'@App\\EventListener\\DeserializeListener.inner'</span></code></pre></div>","editPath":"core/form-data.md","title":"Accept ","previous":{"slug":"/docs/core/extending-jsonld-context/","title":"Extending JSON-LD context"},"next":{"slug":"/docs/core/identifiers/","title":"Identifiers"}}}
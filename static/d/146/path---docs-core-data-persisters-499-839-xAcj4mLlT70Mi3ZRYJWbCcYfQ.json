{"pageContext":{"html":"<h1 id=\"data-persisters\"><a href=\"#data-persisters\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Persisters</h1>\n<p>To mutate the application states during <code class=\"language-text\">POST</code>, <code class=\"language-text\">PUT</code>, <code class=\"language-text\">PATCH</code> or <code class=\"language-text\">DELETE</code> <a href=\"/docs/core/operations/\">operations</a>, API Platform uses\nclasses called <strong>data persisters</strong>. Data persisters receive an instance of the class marked as an API resource (usually using\nthe <code class=\"language-text\">@ApiResource</code> annotation). This instance contains data submitted by the client during <a href=\"/docs/core/serialization/\">the deserialization\nprocess</a>.</p>\n<p>A data persister using <a href=\"http://www.doctrine-project.org/projects/orm.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doctrine ORM</a> is included with the library and\nis enabled by default. It is able to persist and delete objects that are also mapped as <a href=\"https://www.doctrine-project.org/projects/doctrine-orm/en/2.6/reference/basic-mapping.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doctrine entities</a>.\nA <a href=\"https://www.doctrine-project.org/projects/mongodb-odm.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Doctrine MongoDB ODM</a> data persister is also included and can be enabled by following the <a href=\"/docs/core/mongodb/\">MongoDB documentation</a>.</p>\n<p>However, you may want to:</p>\n<ul>\n<li>store data to other persistence layers (ElasticSearch, external web services...)</li>\n<li>not publicly expose the internal model mapped with the database through the API</li>\n<li>use a separate model for <a href=\"/docs/core/data-providers/\">read operations</a> and for updates by implementing patterns such as <a href=\"https://martinfowler.com/bliki/CQRS.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CQRS</a></li>\n</ul>\n<p>Custom data persisters can be used to do so. A project can include as many data persisters as it needs. The first able to\npersist data for a given resource will be used.</p>\n<h2 id=\"creating-a-custom-data-persister\"><a href=\"#creating-a-custom-data-persister\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a Custom Data Persister</h2>\n<p>To create a data persister, you have to implement the <a href=\"https://github.com/api-platform/core/blob/master/src/DataPersister/DataPersisterInterface.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">DataPersisterInterface</code></a>.\nThis interface defines only 3 methods:</p>\n<ul>\n<li><code class=\"language-text\">persist</code>: to create or update the given data</li>\n<li><code class=\"language-text\">remove</code>: to delete the given data</li>\n<li><code class=\"language-text\">support</code>: checks whether the given data is supported by this data persister</li>\n</ul>\n<p>Here is an implementation example:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>DataPersister</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>DataPersister<span class=\"token punctuation\">\\</span>DataPersisterInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>BlogPost</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BlogPostDataPersister</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DataPersisterInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">supports</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> bool\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span> <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">BlogPost</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">persist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// call your persistence layer to save $data</span>\n      <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// call your persistence layer to delete $data</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If service autowiring and autoconfiguration are enabled (they are by default), you are done!</p>\n<p>Otherwise, if you use a custom dependency injection configuration, you need to register the corresponding service and add the\n<code class=\"language-text\">api_platform.data_persister</code> tag. The <code class=\"language-text\">priority</code> attribute can be used to order persisters.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># api/config/services.yaml</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ...</span>\n    <span class=\"token key atrule\">'App\\DataPersister\\BlogPostDataPersister'</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">~</span>\n        <span class=\"token comment\"># Uncomment only if autoconfiguration is disabled</span>\n        <span class=\"token comment\">#tags: [ 'api_platform.data_persister' ]</span></code></pre></div>","editPath":"core/data-persisters.md","title":"Data Persisters","previous":{"slug":"/docs/core/data-providers/","title":"Data Providers"},"next":{"slug":"/docs/core/mercure/","title":"Pushing Live Updates Using the Mercure Protocol"}}}
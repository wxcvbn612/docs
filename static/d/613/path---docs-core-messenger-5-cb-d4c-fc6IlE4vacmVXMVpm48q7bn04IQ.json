{"pageContext":{"html":"<h1 id=\"symfony-messenger-integration-cqrs-and-async-message-processing\"><a href=\"#symfony-messenger-integration-cqrs-and-async-message-processing\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Symfony Messenger Integration: CQRS and Async Message Processing</h1>\n<p>API Platform provides an integration with the <a href=\"https://symfony.com/doc/current/messenger.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Symfony Messenger Component</a>.</p>\n<p>This feature allows to implement the <a href=\"https://martinfowler.com/bliki/CQRS.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Command Query Responsibility Segregation (CQRS)</a> pattern in a convenient way.\nIt also makes it easy to send messages through the web API that will be consumed asynchronously.</p>\n<p>Many transports are supported to dispatch messages to async consumers, including RabbitMQ, Apache Kafka, Amazon SQS and Google Pub/Sub.</p>\n<h2 id=\"installing-symfony-messenger\"><a href=\"#installing-symfony-messenger\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing Symfony Messenger</h2>\n<p>To enable the support of Messenger, install the library:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> $ docker-compose exec php composer require messenger</code></pre></div>\n<h2 id=\"dispatching-a-resource-through-the-message-bus\"><a href=\"#dispatching-a-resource-through-the-message-bus\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dispatching a Resource through the Message Bus</h2>\n<p>Set the <code class=\"language-text\">messenger</code> attribute to <code class=\"language-text\">true</code>, and API Platform will automatically dispatch the API Resource instance as a message using the message bus provided by the Messenger Component:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">// api/src/Entity/ResetPasswordRequest.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">ApiPlatform<span class=\"token punctuation\">\\</span>Core<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>ApiResource</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Validator<span class=\"token punctuation\">\\</span>Constraints</span> <span class=\"token keyword\">as</span> Assert<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @ApiResource(\n *     messenger=true,\n *     collectionOperations={\n *         \"post\"={\"status\"=202}\n *     },\n *     itemOperations={},\n *     outputClass=false\n * )\n */</span>\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResetPasswordRequest</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @var string\n     *\n     * @Assert\\NotBlank\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>Because the <code class=\"language-text\">messenger</code> attribute is <code class=\"language-text\">true</code>, when a <code class=\"language-text\">POST</code> will be handled by API Platform, the corresponding instance of the <code class=\"language-text\">ResetPasswordRequest</code> will be dispatched.</p>\n<p>For this example, only the <code class=\"language-text\">POST</code> operation is enabled.\nWe use the <code class=\"language-text\">status</code> attribute to configure API Platform to return a <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/202\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">202 Accepted HTTP status code</a>.\nIt indicates that the request has been received and will be treated later, without giving an immediate return to the client.\nFinally, the <code class=\"language-text\">output_class</code> attribute is set to <code class=\"language-text\">false</code>, so the HTTP response that will be generated by API Platform will be empty, and the <a href=\"/docs/core/serialization/\">serialization process</a> will be skipped. </p>\n<h2 id=\"registering-a-message-handler\"><a href=\"#registering-a-message-handler\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Registering a Message Handler</h2>\n<p>To process the message that will be dispatched, <a href=\"https://symfony.com/doc/current/messenger.html#registering-handlers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">a handler</a> must be created:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">// api/src/Handler/ResetPasswordRequestHandler.php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Handler</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Entity<span class=\"token punctuation\">\\</span>ResetPasswordRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Messenger<span class=\"token punctuation\">\\</span>Handler<span class=\"token punctuation\">\\</span>MessageHandlerInterface</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ResetPasswordRequestHandler</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MessageHandlerInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span>ResetPasswordRequest <span class=\"token variable\">$forgotPassword</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// do something with the resource</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>That's all!</p>\n<p>By default, the handler will process your message synchronously.\nIf you want it to be consumed asynchronously (e.g. by a worker machine), <a href=\"https://symfony.com/doc/current/messenger.html#transports\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">configure a transport and the consumer</a>.</p>\n<h2 id=\"accessing-to-the-data-returned-by-the-handler\"><a href=\"#accessing-to-the-data-returned-by-the-handler\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessing to the Data Returned by the Handler</h2>\n<p>API Platform automatically uses the <code class=\"language-text\">Symfony\\Component\\Messenger\\Stamp\\HandledStamp</code> when set.\nIt means that if you use a synchronous handler, the data returned by the <code class=\"language-text\">__invoke</code> method replaces the original data.</p>\n<h2 id=\"detecting-removals\"><a href=\"#detecting-removals\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Detecting Removals</h2>\n<p>When a <code class=\"language-text\">DELETE</code> operation occurs, API Platform automatically adds a <code class=\"language-text\">ApiPlatform\\Core\\Bridge\\Symfony\\Messenger\\RemoveStamp</code> <a href=\"https://symfony.com/doc/current/components/messenger.html#adding-metadata-to-messages-envelopes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\"stamp\"</a> instance to the \"envelope\".\nTo differentiate typical persists calls (create and update) and removal calls, check for the presence of this stamp using <a href=\"https://symfony.com/doc/current/components/messenger.html#adding-metadata-to-messages-envelopes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">a custom \"middleware\"</a>.</p>","editPath":"core/messenger.md","title":"Symfony Messenger Integration: CQRS and Async Message Processing","previous":{"slug":"/docs/core/swagger/","title":"OpenAPI Specification Support (formerly Swagger)"},"next":{"slug":"/docs/core/dto/","title":"Using Data Transfer Objects (DTOs)"}}}
{"pageContext":{"html":"<h1 id=\"implement-traefik-into-api-platform-dockerized\"><a href=\"#implement-traefik-into-api-platform-dockerized\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implement Traefik Into API Platform Dockerized</h1>\n<h2 id=\"basic-implementation\"><a href=\"#basic-implementation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Implementation</h2>\n<p><a href=\"https://traefik.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Traefik</a> is a reverse proxy / load balancer that's easy, dynamic, automatic, fast, full-featured, open source, production proven, providing metrics, and integrating with every major cluster technology.</p>\n<p>This tool will help you to define your own routes for your client, api and more generally for your containers.</p>\n<p>Use this custom API Platform <code class=\"language-text\">docker-compose.yml</code> file which implements ready-to-use Traefik container configuration.<br>\nOverride ports and add labels to tell Traefik to listen the routes mentionned and redirect routes to specified container.</p>\n<p><code class=\"language-text\">--api</code> Tell Traefik to generate a browser view to watch containers and IP/DNS associated easier<br>\n<code class=\"language-text\">--docker</code> Tell Traefik to listen docker api<br>\n<code class=\"language-text\">--docker.domain=localhost</code> The main DNS will be on localhost<br>\n<code class=\"language-text\">labels:</code> Key for Traefik configuration into Docker integration  </p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n<span class=\"token comment\">#  ...</span>\n  <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"traefik.frontend.rule=Host:api.localhost\"</span></code></pre></div>\n<p>The api DNS will be specified with <code class=\"language-text\">traefik.frontend.rule=Host:your.host</code> (here api.localhost)  </p>\n<p><code class=\"language-text\">--traefik.port=3000</code> Port specified to Traefik will be exopsed by container (here React app expose the 3000 port)  </p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.4'</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">reverse-proxy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> traefik\n    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>api <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>docker <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>docker.domain=localhost\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> \"80<span class=\"token punctuation\">:</span>80\" <span class=\"token comment\">#All HTTP access will be caught by Traefik</span>\n      <span class=\"token punctuation\">-</span> \"8080<span class=\"token punctuation\">:</span>8080\" <span class=\"token comment\">#Access Traefik webview</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> /var/run/docker.sock<span class=\"token punctuation\">:</span>/var/run/docker.sock\n\n  <span class=\"token key atrule\">php</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>CONTAINER_REGISTRY_BASE<span class=\"token punctuation\">}</span>/php\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> ./api\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db\n    <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./api/.env\n    <span class=\"token comment\"># Comment out these volumes in production</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./api<span class=\"token punctuation\">:</span>/srv/api<span class=\"token punctuation\">:</span>rw<span class=\"token punctuation\">,</span>cached\n      <span class=\"token comment\"># If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead</span>\n      <span class=\"token comment\"># - ./api/var:/srv/api/var:rw</span>\n\n  <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>CONTAINER_REGISTRY_BASE<span class=\"token punctuation\">}</span>/nginx\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"traefik.frontend.rule=Host:api.localhost\"</span>\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> ./api\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> php\n    <span class=\"token comment\"># Comment out this volume in production</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./api/public<span class=\"token punctuation\">:</span>/srv/api/public<span class=\"token punctuation\">:</span>ro\n\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># In production, you may want to use a managed database service</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> postgres<span class=\"token punctuation\">:</span>9.6<span class=\"token punctuation\">-</span>alpine\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"traefik.frontend.rule=Host:db.localhost\"</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> POSTGRES_DB=api\n      <span class=\"token punctuation\">-</span> POSTGRES_USER=api<span class=\"token punctuation\">-</span>platform\n      <span class=\"token comment\"># You should definitely change the password in production</span>\n      <span class=\"token punctuation\">-</span> POSTGRES_PASSWORD=<span class=\"token tag\">!ChangeMe!</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db<span class=\"token punctuation\">-</span>data<span class=\"token punctuation\">:</span>/var/lib/postgresql/data<span class=\"token punctuation\">:</span>rw\n      <span class=\"token comment\"># You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!</span>\n      <span class=\"token comment\"># - ./docker/db/data:/var/lib/postgresql/data:rw</span>\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"5432:5432\"</span>\n\n  <span class=\"token key atrule\">client</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Use a static website hosting service in production</span>\n    <span class=\"token comment\"># See https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.mddeployment</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span>CONTAINER_REGISTRY_BASE<span class=\"token punctuation\">}</span>/client\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">context</span><span class=\"token punctuation\">:</span> ./client\n    <span class=\"token key atrule\">env_file</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./client/.env\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ./client<span class=\"token punctuation\">:</span>/usr/src/client<span class=\"token punctuation\">:</span>rw<span class=\"token punctuation\">,</span>cached\n      <span class=\"token punctuation\">-</span> /usr/src/client/node_modules\n    <span class=\"token key atrule\">expose</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token number\">3000</span>\n    <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"traefik.port=3000\"</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"traefik.frontend.rule=Host:localhost\"</span>\n\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db-data</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Don't forget the db-data, then database won't work in this dockerized solution.</p>\n<p><code class=\"language-text\">localhost</code> is a reserved domain referred in your <code class=\"language-text\">/etc/hosts</code>.\nIf you want to implement custom DNS such as production DNS in local, just put them at the end of your <code class=\"language-text\">/etc/host</code> file like that: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># /etc/hosts\n# ...\n\n127.0.0.1       your.domain.com</code></pre></div>\n<p>If you do that, you'll have to update the <code class=\"language-text\">CORS_ALLOW_ORIGIN</code> environment variable <code class=\"language-text\">api/.env</code> to accept the specified URL.</p>\n<h2 id=\"known-issues\"><a href=\"#known-issues\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Known Issues</h2>\n<p>If your network is of type B, it may conflict with the traefik sub-network.</p>","editPath":"deployment/traefik.md","title":"Implement Traefik Into API Platform Dockerized","previous":{"slug":"/docs/deployment/heroku/","title":"Deploying an API Platform App on Heroku"},"next":{"slug":null,"title":"Deploying to a Kubernetes Cluster"}}}